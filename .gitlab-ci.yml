image: docker:latest

services:
  - docker:dind

stages:
  - test
  - build
  - release
  - deploy

include:
  - template: SAST.gitlab-ci.yml
  - template: Code-Quality.gitlab-ci.yml

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  REF_CONTAINER: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
  RELEASE_CONTAINER:  ${CI_REGISTRY_IMAGE}:latest

before_script:
  

pylint:
  stage: test
  image: python:latest
  before_script:
    - pip install --no-cache-dir --upgrade --quiet -r requirements.txt
    - pip install pylint --quiet
  script:
    - pylint --extension-pkg-whitelist=pydantic --disable=R0801 app
  allow_failure: true

classroom_lint:
  stage: test
  image: node:latest
  before_script:
    - npm --version
  script:
    - cd classroom
    - npm ci
    - npm run codeclimate
    - npm run lint
  artifacts:
    reports:
      codequality: classroom/gl-codequality.json
  allow_failure: true

classroom_test:
  stage: test
  image: node:latest
  before_script:
    - npm --version
    - node -v
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
    - apt-get update
    - apt-get install -y google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf --no-install-recommends
    - rm -rf /var/lib/apt/lists/*
  script:
    - cd classroom
    - npm ci
    - npm run test_headless
    #- npm run e2e
  artifacts:
    paths:
      - classroom/coverage/

build:
  stage: build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --build-arg=BRANCH="${CI_COMMIT_BRANCH}" --build-arg=COMMIT="${CI_COMMIT_SHA}" --build-arg=TAG="${CI_COMMIT_TAG}" --build-arg=USER="${GITLAB_USER_NAME}" --build-arg=URL="${CI_REPOSITORY_URL}" -t "${REF_CONTAINER}" .
    - docker push "${REF_CONTAINER}"

release:
  stage: release
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull "${REF_CONTAINER}"
    - docker tag "${REF_CONTAINER}" "${RELEASE_CONTAINER}"
    - docker push "${RELEASE_CONTAINER}"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'

pages:
  stage: deploy
  dependencies:
    - classroom_test
  script:
    - mv classroom/coverage/ public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
